#!/bin/bash

# Vérif si les fichiers existent
file_exists() {
    if [ -f "$1" ]; then
        return 0
    else
        return 1
    fi
}

# Vérif de la version de MariaDB
check_mariadb_version() {
    apt update && apt upgrade -y

    mariadb_version=$(mysql --version | awk '{print $5}')

    # Vérifier si la version est 10.3
    if [[ "$mariadb_version" == "10.3"* ]]; then
        echo "MariaDB 10.3 => Upgrade + SSL"
        return 0
    else
        echo "MariaDB 10.5 => MAJ SSL"
        return 1
    fi
}

# MAJ MariaDB vers la version 10.4
upgrade_mariadb() {
    # Ajout du dépôt MariaDB 10.4
    curl -LsS -O https://downloads.mariadb.com/MariaDB/mariadb_repo_setup
    chmod +x mariadb_repo_setup
    ./mariadb_repo_setup --mariadb-server-version=10.4

    # Mettre à jour la liste des paquets
    apt update

    # Installer MariaDB 10.4
    apt install mariadb-server -y

    # Utiliser l'outil mariadb-upgrade pour mettre à jour la base de données
    mariadb-upgrade

    # Redémarrer MariaDB
    systemctl restart mariadb

    # Vérifier la version de MariaDB
    mysql --version
}

# Fonction pour configurer SSL pour MariaDB si nécessaire
configure_ssl() {
    # Vérifier si SSL est déjà activé
    have_ssl=$(mysql -e "SHOW VARIABLES LIKE 'have_ssl';" | awk '$2 == "YES" {print $2}')

    if [ -z "$have_ssl" ]; then
        # Création du répertoire SSL
        mkdir -p /etc/mysql/ssl

        # Génération du certificat CA (ca.pem) si nécessaire
        if ! file_exists /etc/mysql/ssl/ca.pem; then
            echo "Génération du certificat CA (ca.pem)..."
            openssl genrsa -out /etc/mysql/ssl/ca-key.pem 2048
            openssl req -new -x509 -days 3650 -key /etc/mysql/ssl/ca-key.pem -out /etc/mysql/ssl/ca.pem -subj "/C=FR/ST=Ile-de-France/L=Grenoble/O=Wpserveur/OU=Wpserveur/CN=wpserveur.net"
            chmod 600 /etc/mysql/ssl/ca-key.pem
        else
            echo "Le certificat CA (ca.pem) existe déjà."
        fi
    # Créer un répertoire pour stocker les certificats SSL
    mkdir -p /etc/mysql/ssl

    # Définir les valeurs par défaut des certificats
    PAYS="FR"
    REGION="Ile-de-France"
    LOCALITE="Grenoble"
    ORGANISATION="Wpserveur"
    UNITE_ORGANISATION="Wpserveur"
    NOM_COMMUN="wpserveur.net"

    # Générer les certificats SSL sans demander de saisie utilisateur
    openssl req -newkey rsa:2048 -nodes -keyout /etc/mysql/ssl/server-key.pem -out /etc/mysql/ssl/server-req.pem -subj "/C=$PAYS/ST=$REGION/L=$LOCALITE/O=$ORGANISATION/OU=$UNITE_ORGANISATION/CN=$NOM_COMMUN"
    openssl x509 -req -in /etc/mysql/ssl/server-req.pem -days 365 -CA /etc/mysql/ssl/ca.pem -CAkey /etc/mysql/ssl/ca-key.pem -set_serial 01 -out /etc/mysql/ssl/server-cert.pem
    openssl dhparam -out /etc/mysql/ssl/dhparams.pem 2048

    # Définir les propriétaires et les permissions des fichiers SSL
    chown -R mysql:mysql /etc/mysql/ssl
    chmod 600 /etc/mysql/ssl/server-key.pem

    # Mettre à jour la configuration de MariaDB pour utiliser les certificats SSL
    echo "Mise à jour de la configuration de MariaDB pour utiliser les certificats SSL..."
    cat <<EOL >> /etc/mysql/mariadb.conf.d/50-server.cnf
[mysqld]
ssl = on
ssl-ca = /etc/mysql/ssl/ca.pem
ssl-cert = /etc/mysql/ssl/server-cert.pem
ssl-key = /etc/mysql/ssl/server-key.pem
EOL

    # Redémarrer MariaDB pour appliquer la configuration SSL
    echo "Redémarrage de MariaDB pour appliquer la configuration SSL..."
    systemctl restart mariadb

    # Vérifier que SSL est activé
    mysql -e "SHOW VARIABLES LIKE 'have_ssl';"

    else
        echo "SSL est déjà activé dans MariaDB (have_ssl = YES). Ignorer la configuration SSL."
    fi
}

# Script principal
if check_mariadb_version; then
    upgrade_mariadb
fi

# Configurer le SSL pour MariaDB 10.5 si ce n'est pas déjà activé
configure_ssl
